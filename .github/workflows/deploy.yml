name: Deploy Java Application and SQL Database

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.7

      - name: Terraform Init and Apply for S3 and DynamoDB
        run: |
          cd terraform
          terraform init
          terraform apply -target=aws_s3_bucket.terraform_state -target=aws_s3_bucket_versioning.terraform_state_versioning -target=aws_dynamodb_table.terraform_locks -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Java app image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/java-app:latest -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/java-app:latest

      - name: Build and push MySQL image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mysql-db:latest -f Dockerfile.mysql .
          docker push ${{ secrets.DOCKER_USERNAME }}/mysql-db:latest

  terraform:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.7

      - name: Terraform Init
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy:
    runs-on: ubuntu-latest
    needs: [terraform]

    steps:
      - name: Deploy Java app and MySQL with Docker Compose
        run: |
          echo "version: '3'
          services:
            java-app:
              image: ${{ secrets.DOCKER_USERNAME }}/java-app:latest
              ports:
                - '8080:8080'
            mysql-db:
              image: ${{ secrets.DOCKER_USERNAME }}/mysql-db:latest
              environment:
                MYSQL_ROOT_PASSWORD: rootpassword
                MYSQL_DATABASE: mydatabase
              ports:
                - '3306:3306'" > docker-compose.yml

          docker-compose up -d

      - name: Wait for 10 minutes
        run: sleep 600

  destroy:
    runs-on: ubuntu-latest
    needs: [deploy]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.7

      - name: Terraform Destroy
        run: |
          cd terraform
          terraform destroy -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
